// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: test.proto
// Protobuf C++ Version: 6.31.0-dev

#ifndef test_2eproto_2epb_2eh
#define test_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_type_handler.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/any.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_test_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_test_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_test_2eproto;
}  // extern "C"
namespace pb {
class SubTest;
struct SubTestDefaultTypeInternal;
extern SubTestDefaultTypeInternal _SubTest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubTest_class_data_;
class Test;
struct TestDefaultTypeInternal;
extern TestDefaultTypeInternal _Test_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Test_class_data_;
class Test2;
struct Test2DefaultTypeInternal;
extern Test2DefaultTypeInternal _Test2_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Test2_class_data_;
class Test3;
struct Test3DefaultTypeInternal;
extern Test3DefaultTypeInternal _Test3_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Test3_class_data_;
class Test_MpEntry_DoNotUse;
struct Test_MpEntry_DoNotUseDefaultTypeInternal;
extern Test_MpEntry_DoNotUseDefaultTypeInternal _Test_MpEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Test_MpEntry_DoNotUse_class_data_;
}  // namespace pb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace pb {

// ===================================================================


// -------------------------------------------------------------------

class Test3 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:pb.Test3) */ {
 public:
  inline Test3() : Test3(nullptr) {}
  ~Test3() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Test3* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Test3));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Test3(::google::protobuf::internal::ConstantInitialized);

  inline Test3(const Test3& from) : Test3(nullptr, from) {}
  inline Test3(Test3&& from) noexcept
      : Test3(nullptr, std::move(from)) {}
  inline Test3& operator=(const Test3& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test3& operator=(Test3&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Test3& default_instance() {
    return *reinterpret_cast<const Test3*>(
        &_Test3_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Test3& a, Test3& b) { a.Swap(&b); }
  inline void Swap(Test3* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Test3* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Test3* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Test3>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Test3& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Test3& from) { Test3::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Test3* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "pb.Test3"; }

 protected:
  explicit Test3(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Test3(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Test3& from);
  Test3(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Test3&& from) noexcept
      : Test3(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVecFieldNumber = 1,
  };
  // repeated int32 vec = 1;
  int vec_size() const;
  private:
  int _internal_vec_size() const;

  public:
  void clear_vec() ;
  ::int32_t vec(int index) const;
  void set_vec(int index, ::int32_t value);
  void add_vec(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& vec() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL mutable_vec();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_vec() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL _internal_mutable_vec();

  public:
  // @@protoc_insertion_point(class_scope:pb.Test3)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Test3& from_msg);
    ::google::protobuf::RepeatedField<::int32_t> vec_;
    ::google::protobuf::internal::CachedSize _vec_cached_byte_size_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Test3_class_data_;
// -------------------------------------------------------------------

class Test2 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:pb.Test2) */ {
 public:
  inline Test2() : Test2(nullptr) {}
  ~Test2() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Test2* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Test2));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Test2(::google::protobuf::internal::ConstantInitialized);

  inline Test2(const Test2& from) : Test2(nullptr, from) {}
  inline Test2(Test2&& from) noexcept
      : Test2(nullptr, std::move(from)) {}
  inline Test2& operator=(const Test2& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2& operator=(Test2&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Test2& default_instance() {
    return *reinterpret_cast<const Test2*>(
        &_Test2_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Test2& a, Test2& b) { a.Swap(&b); }
  inline void Swap(Test2* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Test2* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Test2* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Test2>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Test2& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Test2& from) { Test2::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Test2* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "pb.Test2"; }

 protected:
  explicit Test2(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Test2(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Test2& from);
  Test2(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Test2&& from) noexcept
      : Test2(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSi64FieldNumber = 6,
    kU32FieldNumber = 3,
    kI32FieldNumber = 7000,
  };
  // sint64 si64 = 6;
  void clear_si64() ;
  ::int64_t si64() const;
  void set_si64(::int64_t value);

  private:
  ::int64_t _internal_si64() const;
  void _internal_set_si64(::int64_t value);

  public:
  // uint32 u32 = 3;
  void clear_u32() ;
  ::uint32_t u32() const;
  void set_u32(::uint32_t value);

  private:
  ::uint32_t _internal_u32() const;
  void _internal_set_u32(::uint32_t value);

  public:
  // int32 i32 = 7000;
  void clear_i32() ;
  ::int32_t i32() const;
  void set_i32(::int32_t value);

  private:
  ::int32_t _internal_i32() const;
  void _internal_set_i32(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:pb.Test2)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 3,
                                   0, 0,
                                   7>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Test2& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t si64_;
    ::uint32_t u32_;
    ::int32_t i32_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Test2_class_data_;
// -------------------------------------------------------------------

class Test_MpEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<::int32_t, ::int32_t,
                             ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                             ::google::protobuf::internal::WireFormatLite::TYPE_INT32> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<::int32_t, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>;
  Test_MpEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Test_MpEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit Test_MpEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_Test_MpEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_test_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull Test_MpEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class SubTest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:pb.SubTest) */ {
 public:
  inline SubTest() : SubTest(nullptr) {}
  ~SubTest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubTest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubTest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubTest(::google::protobuf::internal::ConstantInitialized);

  inline SubTest(const SubTest& from) : SubTest(nullptr, from) {}
  inline SubTest(SubTest&& from) noexcept
      : SubTest(nullptr, std::move(from)) {}
  inline SubTest& operator=(const SubTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubTest& operator=(SubTest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubTest& default_instance() {
    return *reinterpret_cast<const SubTest*>(
        &_SubTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SubTest& a, SubTest& b) { a.Swap(&b); }
  inline void Swap(SubTest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubTest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubTest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubTest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubTest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubTest& from) { SubTest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubTest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "pb.SubTest"; }

 protected:
  explicit SubTest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SubTest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubTest& from);
  SubTest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SubTest&& from) noexcept
      : SubTest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kI32FieldNumber = 1,
  };
  // int32 i32 = 1;
  void clear_i32() ;
  ::int32_t i32() const;
  void set_i32(::int32_t value);

  private:
  ::int32_t _internal_i32() const;
  void _internal_set_i32(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:pb.SubTest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SubTest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t i32_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SubTest_class_data_;
// -------------------------------------------------------------------

class Test final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:pb.Test) */ {
 public:
  inline Test() : Test(nullptr) {}
  ~Test() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Test* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Test));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Test(::google::protobuf::internal::ConstantInitialized);

  inline Test(const Test& from) : Test(nullptr, from) {}
  inline Test(Test&& from) noexcept
      : Test(nullptr, std::move(from)) {}
  inline Test& operator=(const Test& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test& operator=(Test&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Test& default_instance() {
    return *reinterpret_cast<const Test*>(
        &_Test_default_instance_);
  }
  enum ObjectCase {
    kObjF32 = 19,
    kObjStr = 20,
    OBJECT_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Test& a, Test& b) { a.Swap(&b); }
  inline void Swap(Test* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Test* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Test* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Test>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Test& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Test& from) { Test::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Test* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "pb.Test"; }

 protected:
  explicit Test(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Test(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Test& from);
  Test(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Test&& from) noexcept
      : Test(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVecFieldNumber = 16,
    kMpFieldNumber = 17,
    kStrFieldNumber = 14,
    kBsFieldNumber = 15,
    kTestFieldNumber = 18,
    kGqwAnyFieldNumber = 21,
    kI64FieldNumber = 2,
    kI32FieldNumber = 1,
    kU32FieldNumber = 3,
    kU64FieldNumber = 4,
    kSi64FieldNumber = 6,
    kSi32FieldNumber = 5,
    kFx32FieldNumber = 7,
    kFx64FieldNumber = 8,
    kSfx64FieldNumber = 10,
    kSfx32FieldNumber = 9,
    kBlFieldNumber = 11,
    kD64FieldNumber = 13,
    kF32FieldNumber = 12,
    kObjF32FieldNumber = 19,
    kObjStrFieldNumber = 20,
  };
  // repeated int32 vec = 16;
  int vec_size() const;
  private:
  int _internal_vec_size() const;

  public:
  void clear_vec() ;
  ::int32_t vec(int index) const;
  void set_vec(int index, ::int32_t value);
  void add_vec(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& vec() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL mutable_vec();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_vec() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL _internal_mutable_vec();

  public:
  // map<int32, int32> mp = 17;
  int mp_size() const;
  private:
  int _internal_mp_size() const;

  public:
  void clear_mp() ;
  const ::google::protobuf::Map<::int32_t, ::int32_t>& mp() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* PROTOBUF_NONNULL mutable_mp();

  private:
  const ::google::protobuf::Map<::int32_t, ::int32_t>& _internal_mp() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* PROTOBUF_NONNULL _internal_mutable_mp();

  public:
  // string str = 14;
  void clear_str() ;
  const std::string& str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_str(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_str();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_str();
  void set_allocated_str(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_str() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_str(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_str();

  public:
  // bytes bs = 15;
  void clear_bs() ;
  const std::string& bs() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bs(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_bs();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_bs();
  void set_allocated_bs(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_bs() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_bs(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_bs();

  public:
  // .pb.SubTest test = 18;
  bool has_test() const;
  void clear_test() ;
  const ::pb::SubTest& test() const;
  [[nodiscard]] ::pb::SubTest* PROTOBUF_NULLABLE release_test();
  ::pb::SubTest* PROTOBUF_NONNULL mutable_test();
  void set_allocated_test(::pb::SubTest* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_test(::pb::SubTest* PROTOBUF_NULLABLE value);
  ::pb::SubTest* PROTOBUF_NULLABLE unsafe_arena_release_test();

  private:
  const ::pb::SubTest& _internal_test() const;
  ::pb::SubTest* PROTOBUF_NONNULL _internal_mutable_test();

  public:
  // .google.protobuf.Any gqw_any = 21;
  bool has_gqw_any() const;
  void clear_gqw_any() ;
  const ::google::protobuf::Any& gqw_any() const;
  [[nodiscard]] ::google::protobuf::Any* PROTOBUF_NULLABLE release_gqw_any();
  ::google::protobuf::Any* PROTOBUF_NONNULL mutable_gqw_any();
  void set_allocated_gqw_any(::google::protobuf::Any* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_gqw_any(::google::protobuf::Any* PROTOBUF_NULLABLE value);
  ::google::protobuf::Any* PROTOBUF_NULLABLE unsafe_arena_release_gqw_any();

  private:
  const ::google::protobuf::Any& _internal_gqw_any() const;
  ::google::protobuf::Any* PROTOBUF_NONNULL _internal_mutable_gqw_any();

  public:
  // int64 i64 = 2;
  void clear_i64() ;
  ::int64_t i64() const;
  void set_i64(::int64_t value);

  private:
  ::int64_t _internal_i64() const;
  void _internal_set_i64(::int64_t value);

  public:
  // int32 i32 = 1;
  void clear_i32() ;
  ::int32_t i32() const;
  void set_i32(::int32_t value);

  private:
  ::int32_t _internal_i32() const;
  void _internal_set_i32(::int32_t value);

  public:
  // uint32 u32 = 3;
  void clear_u32() ;
  ::uint32_t u32() const;
  void set_u32(::uint32_t value);

  private:
  ::uint32_t _internal_u32() const;
  void _internal_set_u32(::uint32_t value);

  public:
  // uint64 u64 = 4;
  void clear_u64() ;
  ::uint64_t u64() const;
  void set_u64(::uint64_t value);

  private:
  ::uint64_t _internal_u64() const;
  void _internal_set_u64(::uint64_t value);

  public:
  // sint64 si64 = 6;
  void clear_si64() ;
  ::int64_t si64() const;
  void set_si64(::int64_t value);

  private:
  ::int64_t _internal_si64() const;
  void _internal_set_si64(::int64_t value);

  public:
  // sint32 si32 = 5;
  void clear_si32() ;
  ::int32_t si32() const;
  void set_si32(::int32_t value);

  private:
  ::int32_t _internal_si32() const;
  void _internal_set_si32(::int32_t value);

  public:
  // fixed32 fx32 = 7;
  void clear_fx32() ;
  ::uint32_t fx32() const;
  void set_fx32(::uint32_t value);

  private:
  ::uint32_t _internal_fx32() const;
  void _internal_set_fx32(::uint32_t value);

  public:
  // fixed64 fx64 = 8;
  void clear_fx64() ;
  ::uint64_t fx64() const;
  void set_fx64(::uint64_t value);

  private:
  ::uint64_t _internal_fx64() const;
  void _internal_set_fx64(::uint64_t value);

  public:
  // sfixed64 sfx64 = 10;
  void clear_sfx64() ;
  ::int64_t sfx64() const;
  void set_sfx64(::int64_t value);

  private:
  ::int64_t _internal_sfx64() const;
  void _internal_set_sfx64(::int64_t value);

  public:
  // sfixed32 sfx32 = 9;
  void clear_sfx32() ;
  ::int32_t sfx32() const;
  void set_sfx32(::int32_t value);

  private:
  ::int32_t _internal_sfx32() const;
  void _internal_set_sfx32(::int32_t value);

  public:
  // bool bl = 11;
  void clear_bl() ;
  bool bl() const;
  void set_bl(bool value);

  private:
  bool _internal_bl() const;
  void _internal_set_bl(bool value);

  public:
  // double d64 = 13;
  void clear_d64() ;
  double d64() const;
  void set_d64(double value);

  private:
  double _internal_d64() const;
  void _internal_set_d64(double value);

  public:
  // float f32 = 12;
  void clear_f32() ;
  float f32() const;
  void set_f32(float value);

  private:
  float _internal_f32() const;
  void _internal_set_f32(float value);

  public:
  // float obj_f32 = 19;
  bool has_obj_f32() const;
  void clear_obj_f32() ;
  float obj_f32() const;
  void set_obj_f32(float value);

  private:
  float _internal_obj_f32() const;
  void _internal_set_obj_f32(float value);

  public:
  // string obj_str = 20;
  bool has_obj_str() const;
  void clear_obj_str() ;
  const std::string& obj_str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_obj_str(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_obj_str();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_obj_str();
  void set_allocated_obj_str(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_obj_str() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_obj_str(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_obj_str();

  public:
  void clear_object();
  ObjectCase object_case() const;
  // @@protoc_insertion_point(class_scope:pb.Test)
 private:
  class _Internal;
  void set_has_obj_f32();
  void set_has_obj_str();
  inline bool has_object() const;
  inline void clear_has_object();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<5, 21,
                                   3, 42,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Test& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> vec_;
    ::google::protobuf::internal::CachedSize _vec_cached_byte_size_;
    ::google::protobuf::internal::MapField<Test_MpEntry_DoNotUse, ::int32_t, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>
        mp_;
    ::google::protobuf::internal::ArenaStringPtr str_;
    ::google::protobuf::internal::ArenaStringPtr bs_;
    ::pb::SubTest* PROTOBUF_NULLABLE test_;
    ::google::protobuf::Any* PROTOBUF_NULLABLE gqw_any_;
    ::int64_t i64_;
    ::int32_t i32_;
    ::uint32_t u32_;
    ::uint64_t u64_;
    ::int64_t si64_;
    ::int32_t si32_;
    ::uint32_t fx32_;
    ::uint64_t fx64_;
    ::int64_t sfx64_;
    ::int32_t sfx32_;
    bool bl_;
    double d64_;
    float f32_;
    union ObjectUnion {
      constexpr ObjectUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      float obj_f32_;
      ::google::protobuf::internal::ArenaStringPtr obj_str_;
    } object_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Test_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SubTest

// int32 i32 = 1;
inline void SubTest::clear_i32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i32_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t SubTest::i32() const {
  // @@protoc_insertion_point(field_get:pb.SubTest.i32)
  return _internal_i32();
}
inline void SubTest::set_i32(::int32_t value) {
  _internal_set_i32(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:pb.SubTest.i32)
}
inline ::int32_t SubTest::_internal_i32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.i32_;
}
inline void SubTest::_internal_set_i32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i32_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Test

// int32 i32 = 1;
inline void Test::clear_i32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i32_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t Test::i32() const {
  // @@protoc_insertion_point(field_get:pb.Test.i32)
  return _internal_i32();
}
inline void Test::set_i32(::int32_t value) {
  _internal_set_i32(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:pb.Test.i32)
}
inline ::int32_t Test::_internal_i32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.i32_;
}
inline void Test::_internal_set_i32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i32_ = value;
}

// int64 i64 = 2;
inline void Test::clear_i64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i64_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t Test::i64() const {
  // @@protoc_insertion_point(field_get:pb.Test.i64)
  return _internal_i64();
}
inline void Test::set_i64(::int64_t value) {
  _internal_set_i64(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:pb.Test.i64)
}
inline ::int64_t Test::_internal_i64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.i64_;
}
inline void Test::_internal_set_i64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i64_ = value;
}

// uint32 u32 = 3;
inline void Test::clear_u32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.u32_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t Test::u32() const {
  // @@protoc_insertion_point(field_get:pb.Test.u32)
  return _internal_u32();
}
inline void Test::set_u32(::uint32_t value) {
  _internal_set_u32(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:pb.Test.u32)
}
inline ::uint32_t Test::_internal_u32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.u32_;
}
inline void Test::_internal_set_u32(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.u32_ = value;
}

// uint64 u64 = 4;
inline void Test::clear_u64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.u64_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint64_t Test::u64() const {
  // @@protoc_insertion_point(field_get:pb.Test.u64)
  return _internal_u64();
}
inline void Test::set_u64(::uint64_t value) {
  _internal_set_u64(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:pb.Test.u64)
}
inline ::uint64_t Test::_internal_u64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.u64_;
}
inline void Test::_internal_set_u64(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.u64_ = value;
}

// sint32 si32 = 5;
inline void Test::clear_si32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.si32_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::int32_t Test::si32() const {
  // @@protoc_insertion_point(field_get:pb.Test.si32)
  return _internal_si32();
}
inline void Test::set_si32(::int32_t value) {
  _internal_set_si32(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:pb.Test.si32)
}
inline ::int32_t Test::_internal_si32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.si32_;
}
inline void Test::_internal_set_si32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.si32_ = value;
}

// sint64 si64 = 6;
inline void Test::clear_si64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.si64_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int64_t Test::si64() const {
  // @@protoc_insertion_point(field_get:pb.Test.si64)
  return _internal_si64();
}
inline void Test::set_si64(::int64_t value) {
  _internal_set_si64(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:pb.Test.si64)
}
inline ::int64_t Test::_internal_si64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.si64_;
}
inline void Test::_internal_set_si64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.si64_ = value;
}

// fixed32 fx32 = 7;
inline void Test::clear_fx32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fx32_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint32_t Test::fx32() const {
  // @@protoc_insertion_point(field_get:pb.Test.fx32)
  return _internal_fx32();
}
inline void Test::set_fx32(::uint32_t value) {
  _internal_set_fx32(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:pb.Test.fx32)
}
inline ::uint32_t Test::_internal_fx32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fx32_;
}
inline void Test::_internal_set_fx32(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fx32_ = value;
}

// fixed64 fx64 = 8;
inline void Test::clear_fx64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fx64_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::uint64_t Test::fx64() const {
  // @@protoc_insertion_point(field_get:pb.Test.fx64)
  return _internal_fx64();
}
inline void Test::set_fx64(::uint64_t value) {
  _internal_set_fx64(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:pb.Test.fx64)
}
inline ::uint64_t Test::_internal_fx64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fx64_;
}
inline void Test::_internal_set_fx64(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fx64_ = value;
}

// sfixed32 sfx32 = 9;
inline void Test::clear_sfx32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sfx32_ = 0;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::int32_t Test::sfx32() const {
  // @@protoc_insertion_point(field_get:pb.Test.sfx32)
  return _internal_sfx32();
}
inline void Test::set_sfx32(::int32_t value) {
  _internal_set_sfx32(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:pb.Test.sfx32)
}
inline ::int32_t Test::_internal_sfx32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sfx32_;
}
inline void Test::_internal_set_sfx32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sfx32_ = value;
}

// sfixed64 sfx64 = 10;
inline void Test::clear_sfx64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sfx64_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::int64_t Test::sfx64() const {
  // @@protoc_insertion_point(field_get:pb.Test.sfx64)
  return _internal_sfx64();
}
inline void Test::set_sfx64(::int64_t value) {
  _internal_set_sfx64(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:pb.Test.sfx64)
}
inline ::int64_t Test::_internal_sfx64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sfx64_;
}
inline void Test::_internal_set_sfx64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sfx64_ = value;
}

// bool bl = 11;
inline void Test::clear_bl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bl_ = false;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline bool Test::bl() const {
  // @@protoc_insertion_point(field_get:pb.Test.bl)
  return _internal_bl();
}
inline void Test::set_bl(bool value) {
  _internal_set_bl(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:pb.Test.bl)
}
inline bool Test::_internal_bl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bl_;
}
inline void Test::_internal_set_bl(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bl_ = value;
}

// float f32 = 12;
inline void Test::clear_f32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f32_ = 0;
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline float Test::f32() const {
  // @@protoc_insertion_point(field_get:pb.Test.f32)
  return _internal_f32();
}
inline void Test::set_f32(float value) {
  _internal_set_f32(value);
  _impl_._has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:pb.Test.f32)
}
inline float Test::_internal_f32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f32_;
}
inline void Test::_internal_set_f32(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f32_ = value;
}

// double d64 = 13;
inline void Test::clear_d64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.d64_ = 0;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline double Test::d64() const {
  // @@protoc_insertion_point(field_get:pb.Test.d64)
  return _internal_d64();
}
inline void Test::set_d64(double value) {
  _internal_set_d64(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:pb.Test.d64)
}
inline double Test::_internal_d64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.d64_;
}
inline void Test::_internal_set_d64(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.d64_ = value;
}

// string str = 14;
inline void Test::clear_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Test::str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:pb.Test.str)
  return _internal_str();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Test::set_str(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:pb.Test.str)
}
inline std::string* PROTOBUF_NONNULL Test::mutable_str()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_str();
  // @@protoc_insertion_point(field_mutable:pb.Test.str)
  return _s;
}
inline const std::string& Test::_internal_str() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str_.Get();
}
inline void Test::_internal_set_str(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.str_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Test::_internal_mutable_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.str_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Test::release_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:pb.Test.str)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.str_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.str_.Set("", GetArena());
  }
  return released;
}
inline void Test::set_allocated_str(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.str_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.str_.IsDefault()) {
    _impl_.str_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.Test.str)
}

// bytes bs = 15;
inline void Test::clear_bs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bs_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Test::bs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:pb.Test.bs)
  return _internal_bs();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Test::set_bs(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.bs_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:pb.Test.bs)
}
inline std::string* PROTOBUF_NONNULL Test::mutable_bs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bs();
  // @@protoc_insertion_point(field_mutable:pb.Test.bs)
  return _s;
}
inline const std::string& Test::_internal_bs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bs_.Get();
}
inline void Test::_internal_set_bs(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.bs_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Test::_internal_mutable_bs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.bs_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Test::release_bs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:pb.Test.bs)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.bs_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.bs_.Set("", GetArena());
  }
  return released;
}
inline void Test::set_allocated_bs(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.bs_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.bs_.IsDefault()) {
    _impl_.bs_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.Test.bs)
}

// repeated int32 vec = 16;
inline int Test::_internal_vec_size() const {
  return _internal_vec().size();
}
inline int Test::vec_size() const {
  return _internal_vec_size();
}
inline void Test::clear_vec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vec_.Clear();
}
inline ::int32_t Test::vec(int index) const {
  // @@protoc_insertion_point(field_get:pb.Test.vec)
  return _internal_vec().Get(index);
}
inline void Test::set_vec(int index, ::int32_t value) {
  _internal_mutable_vec()->Set(index, value);
  // @@protoc_insertion_point(field_set:pb.Test.vec)
}
inline void Test::add_vec(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_vec()->Add(value);
  // @@protoc_insertion_point(field_add:pb.Test.vec)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Test::vec() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:pb.Test.vec)
  return _internal_vec();
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL Test::mutable_vec()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:pb.Test.vec)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_vec();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Test::_internal_vec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vec_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL
Test::_internal_mutable_vec() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.vec_;
}

// map<int32, int32> mp = 17;
inline int Test::_internal_mp_size() const {
  return _internal_mp().size();
}
inline int Test::mp_size() const {
  return _internal_mp_size();
}
inline void Test::clear_mp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mp_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& Test::_internal_mp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mp_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& Test::mp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:pb.Test.mp)
  return _internal_mp();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* PROTOBUF_NONNULL Test::_internal_mutable_mp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.mp_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* PROTOBUF_NONNULL Test::mutable_mp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:pb.Test.mp)
  return _internal_mutable_mp();
}

// .pb.SubTest test = 18;
inline bool Test::has_test() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.test_ != nullptr);
  return value;
}
inline void Test::clear_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.test_ != nullptr) _impl_.test_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::pb::SubTest& Test::_internal_test() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::pb::SubTest* p = _impl_.test_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::SubTest&>(::pb::_SubTest_default_instance_);
}
inline const ::pb::SubTest& Test::test() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:pb.Test.test)
  return _internal_test();
}
inline void Test::unsafe_arena_set_allocated_test(
    ::pb::SubTest* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.test_);
  }
  _impl_.test_ = reinterpret_cast<::pb::SubTest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.Test.test)
}
inline ::pb::SubTest* PROTOBUF_NULLABLE Test::release_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::pb::SubTest* released = _impl_.test_;
  _impl_.test_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::pb::SubTest* PROTOBUF_NULLABLE Test::unsafe_arena_release_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:pb.Test.test)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::pb::SubTest* temp = _impl_.test_;
  _impl_.test_ = nullptr;
  return temp;
}
inline ::pb::SubTest* PROTOBUF_NONNULL Test::_internal_mutable_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.test_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::pb::SubTest>(GetArena());
    _impl_.test_ = reinterpret_cast<::pb::SubTest*>(p);
  }
  return _impl_.test_;
}
inline ::pb::SubTest* PROTOBUF_NONNULL Test::mutable_test()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::pb::SubTest* _msg = _internal_mutable_test();
  // @@protoc_insertion_point(field_mutable:pb.Test.test)
  return _msg;
}
inline void Test::set_allocated_test(::pb::SubTest* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.test_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.test_ = reinterpret_cast<::pb::SubTest*>(value);
  // @@protoc_insertion_point(field_set_allocated:pb.Test.test)
}

// float obj_f32 = 19;
inline bool Test::has_obj_f32() const {
  return object_case() == kObjF32;
}
inline void Test::set_has_obj_f32() {
  _impl_._oneof_case_[0] = kObjF32;
}
inline void Test::clear_obj_f32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (object_case() == kObjF32) {
    _impl_.object_.obj_f32_ = 0;
    clear_has_object();
  }
}
inline float Test::obj_f32() const {
  // @@protoc_insertion_point(field_get:pb.Test.obj_f32)
  return _internal_obj_f32();
}
inline void Test::set_obj_f32(float value) {
  if (object_case() != kObjF32) {
    clear_object();
    set_has_obj_f32();
  }
  _impl_.object_.obj_f32_ = value;
  // @@protoc_insertion_point(field_set:pb.Test.obj_f32)
}
inline float Test::_internal_obj_f32() const {
  if (object_case() == kObjF32) {
    return _impl_.object_.obj_f32_;
  }
  return 0;
}

// string obj_str = 20;
inline bool Test::has_obj_str() const {
  return object_case() == kObjStr;
}
inline void Test::set_has_obj_str() {
  _impl_._oneof_case_[0] = kObjStr;
}
inline void Test::clear_obj_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (object_case() == kObjStr) {
    _impl_.object_.obj_str_.Destroy();
    clear_has_object();
  }
}
inline const std::string& Test::obj_str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:pb.Test.obj_str)
  return _internal_obj_str();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Test::set_obj_str(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (object_case() != kObjStr) {
    clear_object();

    set_has_obj_str();
    _impl_.object_.obj_str_.InitDefault();
  }
  _impl_.object_.obj_str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:pb.Test.obj_str)
}
inline std::string* PROTOBUF_NONNULL Test::mutable_obj_str()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_obj_str();
  // @@protoc_insertion_point(field_mutable:pb.Test.obj_str)
  return _s;
}
inline const std::string& Test::_internal_obj_str() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (object_case() != kObjStr) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.object_.obj_str_.Get();
}
inline void Test::_internal_set_obj_str(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (object_case() != kObjStr) {
    clear_object();

    set_has_obj_str();
    _impl_.object_.obj_str_.InitDefault();
  }
  _impl_.object_.obj_str_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Test::_internal_mutable_obj_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (object_case() != kObjStr) {
    clear_object();

    set_has_obj_str();
    _impl_.object_.obj_str_.InitDefault();
  }
  return _impl_.object_.obj_str_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Test::release_obj_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:pb.Test.obj_str)
  if (object_case() != kObjStr) {
    return nullptr;
  }
  clear_has_object();
  return _impl_.object_.obj_str_.Release();
}
inline void Test::set_allocated_obj_str(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_object()) {
    clear_object();
  }
  if (value != nullptr) {
    set_has_obj_str();
    _impl_.object_.obj_str_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:pb.Test.obj_str)
}

// .google.protobuf.Any gqw_any = 21;
inline bool Test::has_gqw_any() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.gqw_any_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& Test::_internal_gqw_any() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.gqw_any_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& Test::gqw_any() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:pb.Test.gqw_any)
  return _internal_gqw_any();
}
inline void Test::unsafe_arena_set_allocated_gqw_any(
    ::google::protobuf::Any* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gqw_any_);
  }
  _impl_.gqw_any_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.Test.gqw_any)
}
inline ::google::protobuf::Any* PROTOBUF_NULLABLE Test::release_gqw_any() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Any* released = _impl_.gqw_any_;
  _impl_.gqw_any_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Any* PROTOBUF_NULLABLE Test::unsafe_arena_release_gqw_any() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:pb.Test.gqw_any)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Any* temp = _impl_.gqw_any_;
  _impl_.gqw_any_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* PROTOBUF_NONNULL Test::_internal_mutable_gqw_any() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.gqw_any_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.gqw_any_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.gqw_any_;
}
inline ::google::protobuf::Any* PROTOBUF_NONNULL Test::mutable_gqw_any()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::google::protobuf::Any* _msg = _internal_mutable_gqw_any();
  // @@protoc_insertion_point(field_mutable:pb.Test.gqw_any)
  return _msg;
}
inline void Test::set_allocated_gqw_any(::google::protobuf::Any* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gqw_any_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.gqw_any_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:pb.Test.gqw_any)
}

inline bool Test::has_object() const {
  return object_case() != OBJECT_NOT_SET;
}
inline void Test::clear_has_object() {
  _impl_._oneof_case_[0] = OBJECT_NOT_SET;
}
inline Test::ObjectCase Test::object_case() const {
  return Test::ObjectCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Test2

// int32 i32 = 7000;
inline void Test2::clear_i32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i32_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t Test2::i32() const {
  // @@protoc_insertion_point(field_get:pb.Test2.i32)
  return _internal_i32();
}
inline void Test2::set_i32(::int32_t value) {
  _internal_set_i32(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:pb.Test2.i32)
}
inline ::int32_t Test2::_internal_i32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.i32_;
}
inline void Test2::_internal_set_i32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i32_ = value;
}

// uint32 u32 = 3;
inline void Test2::clear_u32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.u32_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t Test2::u32() const {
  // @@protoc_insertion_point(field_get:pb.Test2.u32)
  return _internal_u32();
}
inline void Test2::set_u32(::uint32_t value) {
  _internal_set_u32(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:pb.Test2.u32)
}
inline ::uint32_t Test2::_internal_u32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.u32_;
}
inline void Test2::_internal_set_u32(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.u32_ = value;
}

// sint64 si64 = 6;
inline void Test2::clear_si64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.si64_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t Test2::si64() const {
  // @@protoc_insertion_point(field_get:pb.Test2.si64)
  return _internal_si64();
}
inline void Test2::set_si64(::int64_t value) {
  _internal_set_si64(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:pb.Test2.si64)
}
inline ::int64_t Test2::_internal_si64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.si64_;
}
inline void Test2::_internal_set_si64(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.si64_ = value;
}

// -------------------------------------------------------------------

// Test3

// repeated int32 vec = 1;
inline int Test3::_internal_vec_size() const {
  return _internal_vec().size();
}
inline int Test3::vec_size() const {
  return _internal_vec_size();
}
inline void Test3::clear_vec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vec_.Clear();
}
inline ::int32_t Test3::vec(int index) const {
  // @@protoc_insertion_point(field_get:pb.Test3.vec)
  return _internal_vec().Get(index);
}
inline void Test3::set_vec(int index, ::int32_t value) {
  _internal_mutable_vec()->Set(index, value);
  // @@protoc_insertion_point(field_set:pb.Test3.vec)
}
inline void Test3::add_vec(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_vec()->Add(value);
  // @@protoc_insertion_point(field_add:pb.Test3.vec)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Test3::vec() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:pb.Test3.vec)
  return _internal_vec();
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL Test3::mutable_vec()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:pb.Test3.vec)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_vec();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Test3::_internal_vec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vec_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL
Test3::_internal_mutable_vec() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.vec_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace pb


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // test_2eproto_2epb_2eh
